name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          fetch-depth: 1
      - name: Verify build context
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          test -f Dockerfile || { echo "Dockerfile not found in $(pwd)"; exit 1; }
          cat Dockerfile
      - name: Set up Buildx
        uses: docker/setup-buildx-action@4f4c614b3e7c0b2d0e7d8e27c692380e38936532
      - name: Create & bootstrap builder
        run: |
          docker buildx create --use --name inai-builder
          docker buildx inspect --bootstrap inai-builder
          echo "Buildx builder setup completed"
      - name: Verify Buildx setup
        run: |
          docker buildx version
          docker buildx inspect inai-builder || { echo "Buildx builder not found"; exit 1; }
      - name: Log in to Docker Hub
        uses: docker/login-action@1f8e8c3e9d4b2b2e9d9f8b2b2e9f8b2b2e9f8b2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Verify Docker Hub login
        run: |
          docker pull hello-world || { echo "Docker Hub login failed"; exit 1; }
      - name: Build & push Docker image
        run: docker buildx build --platform linux/amd64 --push -t ${{ secrets.DOCKERHUB_USERNAME }}/inai-voice-assistant:latest --cache-to=type=inline --cache-from=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/inai-voice-assistant:cache .
  test:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      TOGGLE_PASSWORD: ${{ secrets.TOGGLE_PASSWORD }}
      TOGGLE_KEY: ${{ secrets.TOGGLE_KEY }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with:
          fetch-depth: 1
      - name: Set up Python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f
        with:
          python-version: '3.11'
      - name: Cache Python dependencies
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest flake8
      - name: Lint & test
        run: |
          flake8 app/ inai_project/ serve.py --count --exit-zero --max-line-length=127
          pytest tests/

  deploy:
    needs: [build-and-push, test]
    runs-on: ubuntu-latest
    steps:
      - name: Log in Docker Hub
        uses: docker/login-action@1f8e8c3e9d4b2b2e9d9f8b2b2e9f8b2b2e9f8b2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: SSH and deploy
        uses: appleboy/ssh-action@6d54b7c7e3b351a92b7bc5a75a8350939b2b2a3f
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "${{ secrets.ENV_FILE }}" > /home/${{ secrets.EC2_USER }}/inai.env
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/inai-voice-assistant:latest
            docker stop inai-app || true
            docker rm inai-app || true
            docker run -d --name inai-app -p 8000:8000 \
              --env-file /home/${{ secrets.EC2_USER }}/inai.env \
              ${{ secrets.DOCKERHUB_USERNAME }}/inai-voice-assistant:latest

